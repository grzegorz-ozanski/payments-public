name: Run payments

on:
  push:
    branches: [ master ]
  workflow_dispatch:

env:
#  SCRIPT_OUTPUT: script_output.txt
  SCRIPT_OUTPUT: .\.github\workflows\test_output.txt
  REFERENCE_OUTPUT: .\.github\workflows\reference_output.txt

jobs:
#  run-ubuntu:
#    runs-on: ubuntu-latest
#
#    steps:
#    - name: Checkout current repo
#      uses: actions/checkout@v4
#
#    - name: Clone browser repo
#      run: |
#        git clone https://x-access-token:${{ secrets.BROWSER_REPO_TOKEN }}@github.com/grzegorz-ozanski/browser.git
#
#    - name: Install GitHub CLI
#      uses: cli/cli-action@v2
#
#    - name: Download Chrome i Chromedriver from GitHub Release
#      run: |
#        CHROMEDRIVER_VERSION=chromedriver-chrome-134.0.6944.0
#        gh release download "${CHROMEDRIVER_VERSION}" \
#          --repo grzegorz-ozanski/chrome \
#          --pattern "${CHROMEDRIVER_VERSION}.zip"
#         unzip ${CHROMEDRIVER_VERSION}.zip
#      env:
#        GH_TOKEN: ${{ secrets.CHROME_REPO_TOKEN }}
#
#    - name: Set up Python
#      uses: actions/setup-python@v5
#      with:
#        python-version: '3.11'
#
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip install -r requirements.txt
#
#    - name: Add dependency to PYTHONPATH
#      run: echo "PYTHONPATH=$(pwd)/browser" >> $GITHUB_ENV
#
#    - name: Run the script
#      run: python main.py
#

  run-windows:
    runs-on: [self-hosted, Windows]

    steps:
    - name: Checkout current repo
      uses: actions/checkout@v4

    - name: Use system Python 3.11
      run: |
        $PYTHONPATH = "$env:USERPROFILE\AppData\Local\Programs\Python\Python311"
        echo "$PYTHONPATH" >> $env:GITHUB_PATH
        echo "$PYTHONPATH\Scripts" >> $env:GITHUB_PATH

    - name: Verify system Python 3.11
      run: |
        python --version
        where python

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt

    - name: Clone browser repo
      uses: actions/checkout@v4
      with:
        repository: grzegorz-ozanski/browser
        path: browser
        token: ${{ secrets.BROWSER_REPO_TOKEN }}

    - name: Download Chrome and Chromedriver from GitHub Release
      run: |
        $CHROMEDRIVER_VERSION = "chromedriver-chrome-134.0.6944.0"
        gh release download $CHROMEDRIVER_VERSION `
          --repo grzegorz-ozanski/chrome `
          --pattern "$CHROMEDRIVER_VERSION.zip"
        Expand-Archive -Path "$CHROMEDRIVER_VERSION.zip" -DestinationPath .
      env:
        GH_TOKEN: ${{ secrets.CHROME_REPO_TOKEN }}

    - name: Add dependency to PYTHONPATH
      run: echo "PYTHONPATH=$(pwd)/browser" >> $env:GITHUB_ENV

    - name: Prepare credentials
      run: |
        echo "${{ secrets.CREDENTIALS }}" >> $env:GITHUB_ENV

    - name: Mask sensitive env vars dynamically
      run: |
        $patterns = @("_PASSWORD", "_USERNAME")
        foreach ($key in [System.Environment]::GetEnvironmentVariables().Keys) {
          foreach ($suffix in $patterns) {
            if ($key.EndsWith($suffix)) {
              $val = [System.Environment]::GetEnvironmentVariable($key)
              if ($val) {
                Write-Output "::add-mask::$val"
                Write-Output "Masked $key"
              }
            }
          }
        }
      shell: pwsh

#    - name: Run the script
#      shell: pwsh
#      run: |
#        $output = python main.py
#        $output | Set-Content script_output.txt

    - name: Upload error logs
      uses: actions/upload-artifact@v4
      with:
        name: error-logs
        path: |
          ./*.png
          ./*.html

    - name: Compare with reference
      id: compare
      shell: pwsh
      run: |
        if (-not (Test-Path ${env:REFERENCE_OUTPUT})) {
          Write-Output "Reference not found, assuming change"
          echo "changed=true" >> $env:GITHUB_OUTPUT
        } else {
          $new = Get-Content ${env:SCRIPT_OUTPUT} | Select-Object -Skip 1 -SkipLast 2
          $old = Get-Content ${env:REFERENCE_OUTPUT}
          if ($new -ne $old) {
            Write-Output "Script output:`n$|{new}|"
            Write-Output "Reference output:`n|${old}|"
            echo "changed=true" >> $env:GITHUB_OUTPUT
          } else {
            echo "changed=false" >> $env:GITHUB_OUTPUT
          }
        }

    - name: Upload log if output changed
      if: steps.compare.outputs.changed == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: changed-output
        path: ${{ env.SCRIPT_OUTPUT }}

#    - name: Send email if output changed
#      if: steps.compare.outputs.changed == 'true'
#      uses: dawidd6/action-send-mail@v3
#      with:
#        server_address: smtp.gmail.com
#        server_port: 465
#        username: ${{ secrets.GMAIL_USERNAME }}
#        password: ${{ secrets.GMAIL_APP_PASSWORD }}
#        subject: "⚠️ Output changed - ${{ github.repository }}"
#        to: ${{ secrets.GMAIL_EMAIL_ADDRESS }}
#        from: GitHub Actions <no-reply@github.com>
#        body: |
#          Output has changed.
#
#          ➤ View artifact and logs:
#          https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
#
#          If this was expected, consider updating ${{ env.REFERENCE_OUTPUT }}