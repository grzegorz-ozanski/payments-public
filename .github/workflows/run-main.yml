name: Run payments

on:
  push:
    branches: [ master ]
  schedule:
    - cron: "5 0,6,12,18 * * *"  # 4 times a days
  workflow_dispatch:
    inputs:
      dump:
        description: 'Dump workspace after job?'
        required: false
        default: 'false'
env:
  GH_TOKEN: ${{ secrets.CHROME_REPO_TOKEN }}
  COMPARE_SCRIPT: .github/scripts/compare-output.ps1
  MASK_SCRIPT: .github/scripts/mask-env-secrets.ps1
#  SCRIPT_OUTPUT: script_output.txt
  SCRIPT_OUTPUT: .github/workflows/test_output.txt
  REFERENCE_OUTPUT: .github/workflows/reference_output.txt
  REFERENCE_CONTENT: reference.txt
  ACTUAL_CONTENT: actual.txt
  DIFF_FILE: diff.txt
  CHROMEDRIVER_VERSION: chromedriver-chrome-134.0.6944.0
  WORKSPACE_DUMP_DIR: ${{ runner.os == 'Windows' && 'c:/actions-runner/jobs' || '/tmp/actions-runner/jobs' }}

jobs:
#  run-ubuntu:
#    runs-on: ubuntu-latest
#
#    steps:
#    - name: Checkout current repo
#      uses: actions/checkout@v4
#
#    - name: Clone browser repo
#      run: |
#        git clone https://x-access-token:${{ secrets.BROWSER_REPO_TOKEN }}@github.com/grzegorz-ozanski/browser.git
#
#    - name: Install GitHub CLI
#      uses: cli/cli-action@v2
#
#    - name: Download Chrome i Chromedriver from GitHub Release
#      run: |
#        CHROMEDRIVER_VERSION=chromedriver-chrome-134.0.6944.0
#        gh release download "${CHROMEDRIVER_VERSION}" \
#          --repo grzegorz-ozanski/chrome \
#          --pattern "${CHROMEDRIVER_VERSION}.zip"
#         unzip ${CHROMEDRIVER_VERSION}.zip
#      env:
#        GH_TOKEN: ${{ secrets.CHROME_REPO_TOKEN }}
#
#    - name: Set up Python
#      uses: actions/setup-python@v5
#      with:
#        python-version: '3.11'
#
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip install -r requirements.txt
#
#    - name: Add dependency to PYTHONPATH
#      run: echo "PYTHONPATH=$(pwd)/browser" >> $GITHUB_ENV
#
#    - name: Run the script
#      run: python main.py
#

  run-windows:
    runs-on: [self-hosted, Windows]

    steps:
    - name: Checkout current repo
      uses: actions/checkout@v4

    - name: Use system Python 3.11
      if: runner.os == 'Windows'
      run: |
        $PYTHONPATH = "$env:USERPROFILE/AppData/Local/Programs/Python/Python311"
        echo "$PYTHONPATH" >> $env:GITHUB_PATH

    - name: Verify system Python 3.11
      run: |
        python --version
        where python

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt

    - name: Clone browser repo
      uses: actions/checkout@v4
      with:
        repository: grzegorz-ozanski/browser
        path: browser
        token: ${{ secrets.BROWSER_REPO_TOKEN }}

    - name: Download Chrome and Chromedriver from GitHub Release
      run: |
        gh release download ${env:CHROMEDRIVER_VERSION} `
          --repo grzegorz-ozanski/chrome `
          --pattern "${env:CHROMEDRIVER_VERSION}.zip"
        Expand-Archive -Path "${env:CHROMEDRIVER_VERSION}.zip" -DestinationPath .

    - name: Add dependency to PYTHONPATH
      run: echo "PYTHONPATH=$(pwd)/browser" >> $env:GITHUB_ENV

    - name: Prepare credentials
      run: echo "${{ secrets.CREDENTIALS }}" >> $env:GITHUB_ENV

    - name: Mask credentials
      shell: pwsh
      run: pwsh -File $env:MASK_SCRIPT "_USERNAME", "_PASSWORD"

#    - name: Run the script
#      shell: pwsh
#      run: python main.py 2>&1 > ${env:SCRIPT_OUTPUT}

    - name: Compare script output with reference
      id: compare
      shell: pwsh
      run: pwsh -File $env:COMPARE_SCRIPT `
        ${env:SCRIPT_OUTPUT} `
        ${env:REFERENCE_OUTPUT} `
        -ComparedActual ${env:ACTUAL_CONTENT} `
        -ComparedExpected ${env:REFERENCE_CONTENT} `
        -Diff ${env:DIFF_FILE}

    - name: Upload error logs
      uses: actions/upload-artifact@v4
      with:
        name: error-logs
        if-no-files-found: ignore
        path: |
          ./*.png
          ./*.html

    - name: Upload log if script output is different than reference
      if: steps.compare.outputs.changed == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: changed-output
        path: |
          ${{ env.SCRIPT_OUTPUT }}
          ${{ env.ACTUAL_CONTENT }}
          ${{ env.REFERENCE_CONTENT }}
          ${{ env.DIFF_FILE }}

#    - name: Send email if script output is different than reference
#      if: github.event_name == 'schedule' && steps.compare.outputs.changed == 'true'
#      uses: dawidd6/action-send-mail@v3
#      with:
#        server_address: smtp.gmail.com
#        server_port: 465
#        username: ${{ secrets.GMAIL_USERNAME }}
#        password: ${{ secrets.GMAIL_APP_PASSWORD }}
#        subject: "⚠️ ${{ github.repository }} - job execution error"
#        to: ${{ secrets.GMAIL_EMAIL_ADDRESS }}
#        from: GitHub Actions <no-reply@github.com>
#        body: |
#          ${{ github.repository }} GitHub Actions job execution error - actual output is diffent than expected one.
#
#          ➤ View artifact and logs:
#          https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
#
#          If this was expected, consider updating ${{ env.REFERENCE_OUTPUT }}

    - name: Copy working directory for inspection
      if: github.event.inputs.dump == 'true'
      shell: pwsh
      run: |
        $src = "$env:GITHUB_WORKSPACE"
        $dst = "${env:WORKSPACE_DUMP_DIR}\${{ github.run_id }}"
        mkdir -p $dst 
        Copy-Item -Path $src -Recurse -Destination $dst

    - name: Fail workflow if script output is different than reference
      if: steps.compare.outputs.changed == 'true'
      shell: pwsh
      run: |
        Write-Error "❌ Output changed – failing the run."
        exit 10